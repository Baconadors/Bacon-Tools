name: Update OSRS World List

on:
  schedule:
    - cron: "0 7 * * *"   # once per day at 1 AM Central Time (07:00 UTC)
  workflow_dispatch:

permissions:
  contents: write   # allow commits to trigger other workflows

jobs:
  update-worlds:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # full history so diffs work

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests beautifulsoup4 lxml pytz

      - name: Fetch and parse OSRS world list from Wiki
        id: parse
        run: |
          python - <<'EOF'
          import requests, pathlib, sys, os
          from bs4 import BeautifulSoup
          from datetime import datetime, timezone, timedelta
          import pytz

          url = "https://oldschool.runescape.wiki/w/Server"
          resp = requests.get(url)
          resp.raise_for_status()

          soup = BeautifulSoup(resp.text, "lxml")

          worlds = []
          seen = set()

          tables = soup.find_all("table", {"class": "wikitable"})
          if not tables:
              print("ERROR: Could not find any server list tables.")
              sys.exit(1)

          for table in tables:
              for row in table.find_all("tr")[1:]:
                  cells = [c.get_text(strip=True) for c in row.find_all("td")]
                  if not cells:
                      continue
                  world = cells[0]
                  if not world.isdigit():
                      continue

                  if world not in seen:
                      seen.add(world)
                      worlds.append(int(world))

          world_count = len(worlds)
          timestamp = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S UTC")

          if world_count == 0:
              print("ERROR: No valid worlds found â€” parser failed.")
              sys.exit(1)

          worlds.sort()
          lines = [str(w) for w in worlds]

          out_path = pathlib.Path("worlds.txt")
          out_path.write_text("\n".join(lines) + "\n", encoding="utf-8")

          print(f"[INFO] Wrote {world_count} worlds (numbers only) to {out_path}")

          now = datetime.now(timezone.utc)
          next_run_utc = (now + timedelta(days=1)).replace(hour=7, minute=0, second=0, microsecond=0)
          if now.hour < 7:
              next_run_utc = now.replace(hour=7, minute=0, second=0, microsecond=0)

          central = pytz.timezone("America/Chicago")
          next_run_central = next_run_utc.astimezone(central)

          print(f"[INFO] Next run scheduled for {next_run_utc.strftime('%Y-%m-%d %H:%M:%S UTC')} "
                f"({next_run_central.strftime('%Y-%m-%d %I:%M %p %Z')})")

          github_output = os.environ.get("GITHUB_OUTPUT")
          if github_output:
              with open(github_output, "a") as fh:
                  print(f"world_count={world_count}", file=fh)
                  print(f"timestamp={timestamp}", file=fh)
          EOF

      - name: Commit updated worlds.txt
        run: |
          if git diff --quiet worlds.txt; then
            echo "No changes in worlds.txt"
            exit 0
          fi

          git config user.name "Baconadors"
          git config user.email "27475467+Baconadors@users.noreply.github.com"
          git add worlds.txt
          git commit -m "Update OSRS world list: ${{ steps.parse.outputs.world_count }} worlds @ ${{ steps.parse.outputs.timestamp }} [skip ci]"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} HEAD:main
