name: Update OSRS World List

on:
  schedule:
    - cron: "0 * * * *"   # once every hour
  workflow_dispatch:       # allow manual runs

jobs:
  update-worlds:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests beautifulsoup4 lxml

      - name: Fetch and parse OSRS world list
        id: parse
        run: |
          python - <<'EOF'
          import requests
          from bs4 import BeautifulSoup
          import pathlib
          import re, sys, os
          from datetime import datetime

          url = "https://oldschool.runescape.com/slu"
          resp = requests.get(url)
          resp.raise_for_status()

          soup = BeautifulSoup(resp.text, "lxml")

          seen = set()
          worlds = []

          for el in soup.find_all(string=True):
              text = el.strip()
              if text.startswith("Old School"):
                  cleaned = re.sub(r"\b\d+\s+players\b", "", text).strip()
                  cleaned = re.sub(r"^Old School\s+", "", cleaned)
                  if cleaned not in seen:
                      seen.add(cleaned)
                      worlds.append(cleaned)

          world_count = len(worlds)
          timestamp = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S UTC")

          if world_count == 0:
              print("ERROR: No worlds were found â€” parser likely broken.")
              sys.exit(1)

          def world_key(line: str):
              m = re.match(r"(\d+)", line)
              return int(m.group(1)) if m else 0

          worlds.sort(key=world_key)

          out_path = pathlib.Path("worlds.txt")
          out_path.write_text("\n".join(worlds) + "\n", encoding="utf-8")

          print(f"Wrote {world_count} unique, sorted worlds to {out_path} at {timestamp}")

          # Write outputs for next step
          with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
              print(f"world_count={world_count}", file=fh)
              print(f"timestamp={timestamp}", file=fh)
          EOF

      - name: Commit changes if needed
        run: |
          if [ ! -f worlds.txt ]; then
            echo "worlds.txt missing, creating new file..."
            git add worlds.txt
          elif git diff --quiet worlds.txt; then
            echo "No changes in worlds.txt"
            exit 0
          fi

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add worlds.txt
          git commit -m "Update OSRS world list: ${{ steps.parse.outputs.world_count }} worlds @ ${{ steps.parse.outputs.timestamp }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
