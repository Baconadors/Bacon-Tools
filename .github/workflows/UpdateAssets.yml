name: Smart Update Release Assets

permissions:
  contents: write

on:
  push:
    paths:
      - 'Automated_Force_Update_Tool.bat'
      - 'Setup_File_Downloader.bat'
      - 'Windows_Defender_Exclusion_Tool.bat'
      - 'wasp-profile.properties'
      - 'worlds.txt'
    branches:
      - main

jobs:
  update-assets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Changed Files
        id: changed
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed.txt
          echo "Changed files:"
          cat changed.txt

      - name: Set Output Variables for Changed Files
        id: vars
        run: |
          changedFiles=$(cat changed.txt)
          echo "changed=$changedFiles" >> $GITHUB_OUTPUT

      - name: Get Latest Release Info
        id: get_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Changed Files with SHA256
        run: |
          changedFiles="${{ steps.vars.outputs.changed }}"

          for file in $changedFiles; do
            echo "Processing $file"

            # Skip if file missing
            if [ ! -f "$file" ]; then
              echo "⚠️ Skipping $file (not found in working directory)"
              continue
            fi

            # Skip if file empty
            if [ ! -s "$file" ]; then
              echo "⚠️ Skipping $file (empty file)"
              continue
            fi

            echo "File details:"
            ls -l "$file"

            # Generate SHA256 checksum file (strip ALL extensions)
            baseName=$(basename "$file")
            baseName="${baseName%%.*}"
            shaFile="$baseName.sha256"
            sha256sum "$file" | awk '{print $1}' > "$shaFile"
            echo "Generated SHA256 for $file: $(cat $shaFile)"

            # Upload file + checksum (overwrite in release)
            echo "Uploading $file and $shaFile to release..."
            gh release upload ${{ fromJson(steps.get_release.outputs.data).tag_name }} "$file" "$shaFile" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
